version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nestjs_app
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - db
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=3306
      - DATABASE_USER=root
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=nesnexdb
    networks:
      - app-network
    command: npm run start:dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nextjs_app
    ports:
      - "8080:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:3000
      - NEXT_PUBLIC_AWS_REGION=${AWS_REGION}
      - NEXT_PUBLIC_USER_POOL_ID=${USER_POOL_ID}
      - NEXT_PUBLIC_USER_POOL_WEB_CLIENT_ID=${USER_POOL_WEB_CLIENT_ID}
      - NEXT_PUBLIC_COGNITO_DOMAIN=${COGNITO_DOMAIN}
    networks:
      - app-network
    command: npm run dev

  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=nesnexdb
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: